// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.legendsbsc.wallet.ui;

import com.legendsbsc.wallet.interact.FindDefaultWalletInteract;
import com.legendsbsc.wallet.repository.EthereumNetworkRepositoryType;
import com.legendsbsc.wallet.router.ManageWalletsRouter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class SettingsFragment_MembersInjector implements MembersInjector<SettingsFragment> {
  private final Provider<EthereumNetworkRepositoryType> ethereumNetworkRepositoryProvider;

  private final Provider<FindDefaultWalletInteract> findDefaultWalletInteractProvider;

  private final Provider<ManageWalletsRouter> manageWalletsRouterProvider;

  public SettingsFragment_MembersInjector(
      Provider<EthereumNetworkRepositoryType> ethereumNetworkRepositoryProvider,
      Provider<FindDefaultWalletInteract> findDefaultWalletInteractProvider,
      Provider<ManageWalletsRouter> manageWalletsRouterProvider) {
    assert ethereumNetworkRepositoryProvider != null;
    this.ethereumNetworkRepositoryProvider = ethereumNetworkRepositoryProvider;
    assert findDefaultWalletInteractProvider != null;
    this.findDefaultWalletInteractProvider = findDefaultWalletInteractProvider;
    assert manageWalletsRouterProvider != null;
    this.manageWalletsRouterProvider = manageWalletsRouterProvider;
  }

  public static MembersInjector<SettingsFragment> create(
      Provider<EthereumNetworkRepositoryType> ethereumNetworkRepositoryProvider,
      Provider<FindDefaultWalletInteract> findDefaultWalletInteractProvider,
      Provider<ManageWalletsRouter> manageWalletsRouterProvider) {
    return new SettingsFragment_MembersInjector(
        ethereumNetworkRepositoryProvider,
        findDefaultWalletInteractProvider,
        manageWalletsRouterProvider);
  }

  @Override
  public void injectMembers(SettingsFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.ethereumNetworkRepository = ethereumNetworkRepositoryProvider.get();
    instance.findDefaultWalletInteract = findDefaultWalletInteractProvider.get();
    instance.manageWalletsRouter = manageWalletsRouterProvider.get();
  }

  public static void injectEthereumNetworkRepository(
      SettingsFragment instance,
      Provider<EthereumNetworkRepositoryType> ethereumNetworkRepositoryProvider) {
    instance.ethereumNetworkRepository = ethereumNetworkRepositoryProvider.get();
  }

  public static void injectFindDefaultWalletInteract(
      SettingsFragment instance,
      Provider<FindDefaultWalletInteract> findDefaultWalletInteractProvider) {
    instance.findDefaultWalletInteract = findDefaultWalletInteractProvider.get();
  }

  public static void injectManageWalletsRouter(
      SettingsFragment instance, Provider<ManageWalletsRouter> manageWalletsRouterProvider) {
    instance.manageWalletsRouter = manageWalletsRouterProvider.get();
  }
}
